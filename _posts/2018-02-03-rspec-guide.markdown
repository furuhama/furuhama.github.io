---
layout: post
title:  "Rspec のまとめ"
date:   2018-02-03 16:50:00
tag: [ruby]
---

Rspec が苦手なので、大事なことをメモ

### 基本的な書き方

{% highlight ruby %}

describe 'テスト対象' do
# => インスタンスメソッドなら '#hoge'
# => クラスメソッドなら '.fuga'

  context '条件' do
    it '結果' do
      # hoge
    end

    it '結果' do
      # fuga
    end
  end

# => テスト内容がそのコードから自明なら ''は省略
  context '条件' do
    it {}

    it {}
  end

{% endhighlight %}

### 考え方

- まずテスト対象の機能全体を階層化する
  - 何と何が同じレベルの話か(初期化、バリデーション、クラスメソッド、インスタンスメソッド...)
  - レベル同士の前後関係(テストの読み手が理解しやすいように、対象クラス内の定義順をなぞると良さそう)

- 各テスト内では境界条件が把握しやすいように、境界条件の近傍での対比が見えやすいように書く
  - 境界でテスト結果が変わるのならば、テスト結果ごとにまとめてテストを行う
  - 境界でテスト結果が同じならば(ある動作が保証されるのならば)、条件は境界をまたいでいる一方で結果が同じであることをわかりやすく書く( rspec なら shared_examples_of とか使う)(つまり、だらだらと似た処理を書かない)

- 似た処理は積極的にDRY原則に則って書くことで、何と何を比較したいテストなのかが見えやすくなるようにする

- テストの作成において重視すべき要素
  - 本体における実装の意図がわかるか
  - テストで検証したいことがわかるか
  - テストがコケる原因を突き止めやすいか
  - テストのコード量が無駄に多くないか
  - テストを変更しやすいか(過度に独自のコードに依存していないか)
