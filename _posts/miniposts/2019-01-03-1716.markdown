---
layout: post
title: dry-rb
date: 2019-01-03 17:16:49 +0900
tag: [minipost]
---

[dry-rb](https://dry-rb.org/) っていうものがあるらしい、他の Ruby よりも現代的な特徴を備えた言語処理系からいくつかの良い部分を Ruby に持ってこようという試みだと思っている。多分。

公式ページのいくつかのサンプルケースをみていたんだけど、 Dependency management とかは便利そうだなと思った一方で、 Some とか Result 型を Ruby に入れる有用性はどんなもんなんだろ 🤔 と思った。 Ruby って関数の引数や戻り値の型の整合性を静的に解決できないので、結局実行時に評価してみて安全に動くかどうかだし、そういう環境に後付けで Some や Result を入れるのってどれくらい意味があるのか僕には今の所よくわかっていない。

それだったらネイティブでそういった部分がサポートされている言語処理系を使う形に、処理をコンポーネントごとに切り出す、とかも選択肢に入ってこないのかなって。

とはいえどちらかというとある一連の処理をいちいち丁寧に条件分岐作らずに、しかし安全に書いていきたいというモチベーションなのかもしれないね。 JavaScript の Promise みたいなものに近いというか。
